provider "aws" {
region = "ap-south-1"
access_key = "AKIAJQHPEHHEJKZXDN3A"
secret_key = "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"
}

resource "aws_vpc" "master_VPC" {
  cidr_block       = "10.0.0.0/16"
  instance_tenancy = "default"

  tags = {
    Name = "master"
  }
}

resource "aws_subnet" "public_subnet" {
  vpc_id     = aws_vpc.master_VPC.id
  cidr_block = "10.0.1.0/24"

  tags = {
    Name = "Public_subnet"
  }
}

resource "aws_subnet" "public_subnet_b" {
  vpc_id     = aws_vpc.master_VPC.id
  cidr_block = "10.0.3.0/24"

  tags = {
    Name = "Public_subnet_b"
  }
}

resource "aws_subnet" "private_subnet" {
  vpc_id     = aws_vpc.master_VPC.id
  cidr_block = "10.0.2.0/24"

  tags = {
    Name = "Private_subnet"
  }
}

resource "aws_security_group" "master_sg" {
  name        = "allow_tls"
  description = "Allow TLS inbound traffic"
  vpc_id      = aws_vpc.master_VPC.id

  ingress {
    description = "TLS from VPC"
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = [aws_vpc.master_VPC.cidr_block]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = {
    Name = "master_sg"
  }
}

resource "aws_internet_gateway" "master_IGW" {
  vpc_id = aws_vpc.master_VPC.id

  tags = {
    Name = "master_IGW"
  }
}

resource "aws_route_table" "master_rt" {
  vpc_id = aws_vpc.master_VPC.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.master_IGW.id
  }


  tags = {
    Name = "master_rt"
  }
}

resource "aws_route_table_association" "Public_rt" {
  subnet_id      = aws_subnet.public_subnet.id
  route_table_id = aws_route_table.master_rt.id
}

resource "aws_route_table_association" "Public_rt_b" {
  subnet_id      = aws_subnet.public_subnet_b.id
  route_table_id = aws_route_table.master_rt.id
}

resource "aws_instance" "master_ec2" {
  ami           = "ami-0eeb03e72075b9bcc"
  instance_type = "t2.micro"
  key_name = "cloud"
  security_groups = [aws_security_group.master_sg.id]
  subnet_id = aws_subnet.public_subnet.id
  associate_public_ip_address = "true"
  tags = {
    Name = "master"
  }
}

resource "aws_ami_from_instance" "master_ami" {
  name               = "master_ami"
  source_instance_id = aws_instance.master_ec2.id
}

resource "aws_key_pair" "cloud" {
  key_name   = "cloud"
  public_key = "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDJME1VDXr92TaQ90b4Tn/Ld/zr7ihFfIebNXW+fjGTEVIWN4t/b7ulUfle+2ppXD3QcTT+DGGyn73Jb
SKfT0Z1x28qzghUYVgPWPJv+/8+oy7677XsYqmUaXPvaO8dKieZXfrSUQhmLD268j7LDPcAtZPEekN65yaLpQG2T2OMoykYjGYCJ9NM5DzImnK9ibB+0+W/fkrSpLKH/
mcq118JMVmmemT9YUM4IAQezwUMAvVlNEalU5o9YMP28+CGJ3kARJEZnqwKQ17W1n8mqeeZfRVInln9MQcimJRd0dy//KZzoNBVsswtYirXMHSLTOq0h7KQFmarS
A8BbtiYSoZV root@ip-172-31-38-250.ec2.internal"
}

resource "aws_launch_configuration" "master_launch" {
  name_prefix   = "master_launch_conf"
  image_id      = aws_ami_from_instance.master_ami.id
  instance_type = "t2.micro"
}

resource "aws_autoscaling_group" "master_ASG" {
  name                      = "master_card_ASG"
  max_size                  = 3
  min_size                  = 2
  health_check_grace_period = 300
  health_check_type         = "EC2"
  desired_capacity          = 2
  force_delete              = true
  launch_configuration      = aws_launch_configuration.master_launch.id
  vpc_zone_identifier       = [aws_subnet.public_subnet.id, aws_subnet.public_subnet_b.id]

}

